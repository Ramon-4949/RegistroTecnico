@page "/Ticket/Edit/{TicketId:int}"
@inject TicketsService ticketsService
@inject ClientesService clientesService
@inject TecnicosService tecnicosService
@inject IToastService toastService
@rendermode InteractiveServer

<PageTitle>Editar Ticket</PageTitle>

<EditForm Model="Ticket" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Editar Ticket</h5>
            </div>

            <div class="card-body">
                @* TicketId *@
                <div class="mb-3">
                    <label class="form-label"><strong>TicketId</strong></label>
                    <InputNumber class="form-control" @bind-Value="Ticket.TicketId" readonly />
                </div>

                @* Prioridad *@
                <div class="mb-3">
                    <label class="form-label"><strong>Prioridad</strong></label>
                    <InputSelect class="form-control" @bind-Value="Ticket.Prioridad">
                        <option disabled value="">Seleccione una prioridad</option>
                        <option value="Baja">Baja</option>
                        <option value="Media">Media</option>
                        <option value="Alta">Alta</option>
                        <option value="Crítica">Crítica</option>
                    </InputSelect>
                    <ValidationMessage For="(() => Ticket.Prioridad)" />
                </div>

                @* Asunto *@
                <div class="mb-3">
                    <label class="form-label"><strong>Asunto</strong></label>
                    <InputText class="form-control" @bind-Value="Ticket.Asunto" />
                    <ValidationMessage For="(() => Ticket.Asunto)" />
                </div>

                @* Descripción *@
                <div class="mb-3">
                    <label class="form-label"><strong>Descripción</strong></label>
                    <textarea class="form-control" @bind="Ticket.Descripcion" rows="5" placeholder="Describa el problema en detalle..."></textarea>
                    <ValidationMessage For="(() => Ticket.Descripcion)" />
                </div>

                @* Tiempo Invertido *@
                <div class="mb-3">
                    <label class="form-label"><strong>Tiempo Invertido (horas)</strong></label>
                    <InputNumber class="form-control" @bind-Value="Ticket.TiempoInvertido" />
                    <ValidationMessage For="(() => Ticket.TiempoInvertido)" />
                </div>

                @* Técnico Encargado *@
                <div class="mb-3">
                    <label class="form-label"><strong>Técnico Encargado</strong></label>
                    <InputSelect class="form-control" @bind-Value="Ticket.TecnicoId">
                        <option disabled value="">Seleccione el técnico encargado</option>
                        @foreach (var tecnico in ListaTecnicos)
                        {
                            <option value="@tecnico.TecnicoId">@tecnico.Nombres</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="(() => Ticket.TecnicoId)" />
                </div>

                @* Cliente *@
                <div class="mb-3">
                    <label class="form-label"><strong>Cliente</strong></label>
                    <InputSelect class="form-control" @bind-Value="Ticket.ClienteId">
                        <option disabled value="">Seleccione al cliente correspondiente</option>
                        @foreach (var cliente in ListaClientes)
                        {
                            <option value="@cliente.ClienteId">@cliente.Nombres</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="(() => Ticket.ClienteId)" />
                </div>
            </div>

            <div class="card-footer text-center mt-2">
                <a href="/Ticket/Index" class="btn btn-outline-danger"><span class="bi bi-arrow-left"></span> Volver</a>
                <button type="submit" class="btn btn-outline-success bi bi-floppy"> Guardar</button>
                <a href="/Ticket/Eliminar/@Ticket.TicketId" class="btn btn-outline-danger bi bi-trash"> Eliminar</a>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int TicketId { get; set; }

    private Tickets Ticket { get; set; } = new Tickets();

    public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
    public List<Clientes> ListaClientes { get; set; } = new List<Clientes>();

    protected override async Task OnInitializedAsync()
    {
        Ticket = await ticketsService.Buscar(TicketId);
        ListaTecnicos = await tecnicosService.Listar(t => t.TecnicoId > 0);
        ListaClientes = await clientesService.Listar(c => c.ClienteId > 0);
    }

    private async Task Guardar()
    {
        var guardo = await ticketsService.Guardar(Ticket);

        if (guardo != null)
        {
            toastService.ShowSuccess("Ticket guardado correctamente");
        }
        else
        {
            toastService.ShowError("Error al guardar el registro");
        }
    }
}
