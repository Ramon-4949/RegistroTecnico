@page "/Tecnico/Index"
@using RegistroTecnico.Models
@using RegistroTecnico.Services
@inject TecnicosService tecnicosService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Consultar Técnico</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        <div class="card-header text-center">
            <h3 class="card-title fw-bold">Consultar Técnico</h3>
        </div>

        <div class="card-body">
            <div class="row mb-3">
                <div class="col-3">
                    <label class="col-form-label"><strong>Filtrar por</strong></label>
                </div>
                <div class="col-4">
                    <label class="col-form-label"><strong>Búsqueda</strong></label>
                </div>
            </div>

            <div class="row align-items-center mb-4">
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Elija una opción</option>
                        <option value="TecnicoId">Técnico Id</option>
                        <option value="Nombres">Nombres</option>
                    </InputSelect>
                </div>

                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                        <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
                    </div>
                </div>

                <div class="col text-end">
                    <a href="/Tecnico/Create" class="btn btn-success">
                        <i class="bi bi-plus-square"></i> Crear
                    </a>
                </div>
            </div>

            <table class="table table-hover">
                <thead class="table table-striped text-black">
                    <tr>
                        <th>Técnico Id</th>
                        <th>Nombre</th>
                        <th>Sueldo por Hora</th>
                        <th>Editar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var tecnico in ListaTecnicos)
                    {
                        <tr>
                            <td>@tecnico.TecnicoId</td>
                            <td>@tecnico.Nombres</td>
                            <td>@tecnico.SueldoHora.ToString("N2")</td>
                            <td>
                                <a href="/Tecnico/Edit/@tecnico.TecnicoId" class="btn btn-outline-primary">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public List<Tecnicos> ListaTecnicos { get; set; } = new();
    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaTecnicos = await tecnicosService.Listar(t => t.TecnicoId > 0);
    }

    private async Task Buscar()
    {
        if (Filtro == "TecnicoId" && int.TryParse(ValorFiltro, out var tecnicoId))
        {
            ListaTecnicos = await tecnicosService.Listar(t => t.TecnicoId == tecnicoId);
        }
        else if (Filtro == "Nombres" && !string.IsNullOrWhiteSpace(ValorFiltro))
        {
            ListaTecnicos = await tecnicosService.Listar(t =>
                t.Nombres.ToLower().Contains(ValorFiltro.ToLower()));
        }

        StateHasChanged();
    }

    private async Task Restablecer()
    {
        ListaTecnicos = await tecnicosService.Listar(t => t.TecnicoId > 0);
        Filtro = string.Empty;
        ValorFiltro = string.Empty;
    }
}
